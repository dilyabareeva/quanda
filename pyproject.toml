[project]
name = "quanda"
dynamic = ["version"]
authors = [
  { name="Dilyara Bareeva", email="dilyabareeva@gmail.com" },
    {name = "Galip Ãœmit Yolcu", email = "galip.uemit.yolcu@hhi.fraunhofer.de" },
]
description = "Toolkit for quantitative evaluation of data attribution methods in PyTorch."
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.8,<3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
keywords = ["interpretability", "xai", "machine learning", "deep learning"]

dependencies = [
    "numpy>=1.19.5",
    "torch>=1.13.1",
    "lightning>=1.4.0",
    "torchmetrics>=1.4.0",
    "tqdm>=4.0.0",
    "traker>=0.3.2",
    "annoy>=1.17.0",
    "datasets>=2.0.0",
    "torcheval>=0.0.6",
    "torchvision>=0.10.0",
]


[project.urls]
Homepage = "https://github.com/dilyabareeva/quanda"
Issues = "https://github.com/dilyabareeva/quanda/issues"

[build-system]
requires = ["setuptools>=42", "setuptools-scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "node-and-date"

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = ["trak", "trak.projectors", "fast_jl"]
ignore_missing_imports = true

[tool.ruff]
line-length = 79
target-version = "py311"

[tool.ruff.format]
docstring-code-line-length = 79
exclude = [
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".ipynb_checkpoints",
    ".pytest_cache",
    ".tox",
    ".vscode",
    "venv",
    "_build",
    "buck-out",
    "build",
    "dist",
    "wandb",
]

[tool.ruff.lint]
ignore = ["E203", "PT006"]
extend-select = ["PT", "C901"]
exclude = [
    "build/",
    "dist/",
    ".tox/",
]

# Black formatting
[tool.black]
line-length = 79
exclude = '''
/(
      .eggs         # exclude a few common directories in the
    | .git          # root of the project
    | .hg
    | .mypy_cache
    | .tox
    | venv
    | _build
    | buck-out
    | build
    | dist
  )/
'''

# Pytest
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.setuptools]
py-modules = []

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
branch = "main"
changelog_file = "CHANGELOG.md"
major_on_zero = false

[project.optional-dependencies]
dev = [ # Install wtih pip install .[dev] or pip install -e '.[dev]' in zsh
    "coverage>=7.2.3",
    "pytest<=7.4.4",
    "pytest-cov>=4.0.0",
    "pytest-mock==3.10.0",
    "pre-commit>=3.2.0",
    "mypy==1.9.0",
    "types-tqdm>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx>=7.0.0",
    "numpydoc",
    "torchvision>=0.10.0",
    "types-Pillow>=8.3.0",
    "ruff>=0.7.0",
]
tutorials = [
    "torchvision>=0.10.0",
    "matplotlib>=3.4.0",
    "pillow>=8.3.0",
    "python-dotenv>=1.0.0",
    "nltk>=3.6.0",
    "wandb>=0.12.10",
]
